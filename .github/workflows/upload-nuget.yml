name: Generate NuGet and push to Nuget.org

on:
  workflow_dispatch:
  push:
    tags:
      - '*.*.*'
      - 'v*.*.*'

env:
  DOTNET_PROJECT: CloudBrowserAiSharp.Client
  DOTNET_CSPROJ: ./src/CloudBrowserAiSharp.Client/CloudBrowserAiSharp.Client.csproj
  RESTORE_SOURCES: --source https://api.nuget.org/v3/index.json
  CONFIGURATION: Release
  FRAMEWORK: net8.0
  RUNTIME: linux-x64
  ADDITIONAL_PROPERTIES: ""

jobs:
  generate-nuget-and-push:
    runs-on: ubuntu
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          #submodules: false
          #lfs: true
          clean: true
          fetch-depth: 0 # Required, without this get_previous_tag action won't be able to find any or the correct tags

      - name: Check initial folder
        run: |
          echo "Checked out code"
          ls -la
          echo $PWD
          echo ${GITHUB_WORKSPACE}/src
          
      - name: Extract Git Branch information
        id: branch_name
        run: |
          MBRANCH=${GITHUB_REF#refs/*/}
          if [[ $MBRANCH == feature/* ]]; then
            BRANCH="a-${MBRANCH#feature/}.$(date +%Y%m%d%H%M)"
          elif [[ $MBRANCH == "master" ]] || [[ $MBRANCH == "main" ]]; then
            BRANCH="" ;
          else
            BRANCH="${MBRANCH}.$(date +%Y%m%d%H%M)"
          fi
          echo "BRANCH: $BRANCH";
          echo "BRANCH=$BRANCH" >> $GITHUB_OUTPUT
          echo "Started by: $GITHUB_ACTOR | SHA: $GITHUB_SHA | Tag: ${GITHUB_REF#refs/tags/}"

      - name: Get Previous Tag
        id: get_previous_tag
        #uses: WyriHaximus/github-action-get-previous-tag@v1
        run: |
          VERSIONPROPS=$(cat Directory.Build.props | grep "<VersionPrefix>" | cut -d ">" -f2 | cut -d "<" -f1)
          echo "tag=$VERSIONPROPS" >> $GITHUB_OUTPUT
        
      - name: Set VERSION variable from Directory.Build.props
        id: version_num
        run: |
          echo VERSION: ${{ steps.get_previous_tag.outputs.tag }}
          echo "VERSION=${{ steps.get_previous_tag.outputs.tag }}" >> $GITHUB_OUTPUT
         
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x
       
      - name: Restore
        run: |
             dotnet restore /property:Configuration=${{ inputs.CONFIGURATION }} /property:TargetFramework=${{ inputs.FRAMEWORK }} --runtime ${{ inputs.RUNTIME }} \
             ${{ inputs.DOTNET_CSPROJ }} --source https://nuget.pkg.github.com/HustleGotReal/index.json ${{ inputs.RESTORE_SOURCES }}
        
      - name: Build
        run: |
             dotnet build -f ${{ inputs.FRAMEWORK }} -r ${{ inputs.RUNTIME }} ${{ inputs.DOTNET_CSPROJ }} /property:Configuration=${{ inputs.CONFIGURATION }} ${{ inputs.ADDITIONAL_PROPERTIES }} /p:DebugSymbols=true /p:DebugType=portable /p:SymbolPackageFormat=snupkg \
             /p:VersionPrefix=${{ steps.version_num.outputs.VERSION }} /p:VersionSuffix=${{ steps.branch_name.outputs.BRANCH }}

      - name: Pack
        run: dotnet pack ${{ inputs.DOTNET_CSPROJ }} -c ${{ inputs.CONFIGURATION }} /p:VersionPrefix=${{ steps.version_num.outputs.VERSION }} /p:VersionSuffix=${{ steps.branch_name.outputs.BRANCH }} /p:GenerateAssemblyInfo=true /p:DebugSymbols=true /p:DebugType=portable /p:SymbolPackageFormat=snupkg --output nupkg-tmp/

      - name: Publish package to NuGet.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push ./nupkg-tmp/*.nupkg --source https://api.nuget.org/v3/index.json --api-key $NUGET_API_KEY
